---
import { basics, languages } from '@cv/cv.json';
import { basics as enBasics, languages as enLanguages } from '@cv/cv-en.json';

import IconAt from '@icons/IconAt.astro';
import IconPhone from '@icons/IconPhone.astro';
import IconWorldPin from '@icons/IconWorldPin.astro';

import GitHub from '@icons/IconGitHub.astro';
import LinkedIn from '@icons/IconLinkedIn.astro';
import Twitter from '@icons/IconTwitter.astro';
import Instagram from '@icons/IconInstagram.astro';
import YouTube from '@icons/IconYouTube.astro';
import Twitch from '../icons/IconTwitch.astro';
import IconDev from '../icons/IconDev.astro';

const { name, label, image, location, profiles, phone, email, url } = basics;
const { city, region } = location;

const likendInfo = profiles.find(({ network }) => network === 'LinkedIn');
const linkedInUrl = likendInfo?.url;

const printInfo = [email, phone, linkedInUrl, url].filter(Boolean).join(' • ');

// LANGUAGES
let currentLang = Astro.url.pathname.split('/')[1];
if (currentLang === 'cv') currentLang = 'ar';

let displayLabel = '';
if (currentLang === 'ar') displayLabel = label;
if (currentLang === 'en') displayLabel = enBasics.label;

// Socials
let socialBlog = '';
let socialEmail = '';
let socialPhone = '';
let socialNetwork = '';

if (currentLang === 'ar') {
  socialBlog = 'Visitar el sitio web y blog de Kevin Zanzi';
  socialEmail = `Enviar un correo electrónico a ${name} al correo ${email}`;
  socialPhone = `Llamar por teléfono a ${name} al número ${phone}`;
  socialNetwork = `Visitar el perfil de ${name} en `;
} else if (currentLang === 'en') {
  socialBlog = 'Visit Kevin Zanzi website and blog';
  socialEmail = `Send an email to ${name} at ${email}`;
  socialPhone = `Call ${name} at ${phone}`;
  socialNetwork = `Visit ${name} profile on `;
}
// END LANGUAGES
---

<div class="wrapper">
  <div class="info">
    <h1>{name}</h1>
    <h2>{displayLabel}</h2>
    <span
      ><IconWorldPin width={16} height={16} class="min-w-[16px] min-h-[16px]" />
      {city}, {region}</span
    >
    <span class="languages"
      >{
        languages.map(({ language, code }, idx) => {
          let lang = `/${code}/cv`;

          if (code === 'ar') lang = `/cv`;
          // if (currentLang === code) lang = `/${code}/cv`;

          if (currentLang === 'en') {
            return (
              <a
                href={`${lang}`}
                title={`I speak ${enLanguages[idx].language} and clicking will change the curriculum language to ${enLanguages[idx].language}`}
                aria-label={`I speak ${enLanguages[idx].language} and clicking will change the curriculum language to ${enLanguages[idx].language}`}
              >
                {enLanguages[idx].language}
              </a>
            );
          } else if (currentLang === 'ar') {
            return (
              <a
                href={`${lang}`}
                title={`Hablo ${language} y al hacer click cambiará el idioma del currículum a ${language}`}
                aria-label={`Hablo ${language} y al hacer click cambiará el idioma del currículum a ${language}`}
              >
                {language}
              </a>
            );
          }
        })
      }</span
    >
    <footer class="print">
      {printInfo}
    </footer>
    <footer class="no-print">
      <a
        href="https://kizendev.github.io/"
        title={socialBlog}
        aria-label={socialBlog}
        target="_blank"
      >
        <IconDev />
      </a>
      {
        email && (
          <a
            href={`mailto:${email}`}
            title={socialEmail}
            aria-label={socialEmail}
            target="_blank"
            rel="noopener noreferrer"
          >
            <IconAt />
          </a>
        )
      }
      {
        phone && (
          <a
            href={`tel:${phone}`}
            title={socialPhone}
            aria-label={socialPhone}
            target="_blank"
            rel="noopener noreferrer"
          >
            <IconPhone />
          </a>
        )
      }
      {
        profiles.map(({ network, url }) => {
          return (
            <a
              href={url}
              title={`${socialNetwork}${network}`}
              aria-label={`${socialNetwork}${network}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              {network === 'GitHub' && <GitHub />}{' '}
              {network === 'LinkedIn' && <LinkedIn />}{' '}
              {(network === 'X' || network === 'Twitter') && <Twitter />}
              {network === 'Instagram' && <Instagram />}
              {network === 'YouTube' && <YouTube />}
              {network === 'Twitch' && <Twitch />}
            </a>
          );
        })
      }
    </footer>
  </div>
  <figure>
    <img src={image} alt={name} />
  </figure>
</div>

<style>
  .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;

    /* EXTRAS */
    /* container: pfpimage / inline-size; */
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;

    flex-shrink: 1;
  }
  @media screen and (max-width: 500px) {
    .info {
      padding-right: 0;
    }
  }

  .languages {
    flex-wrap: wrap;
    gap: 4px;
  }
  .languages a {
    padding: 0.2rem 0.6rem;
    color: var(--color-zinc-400);
    background-color: var(--color-zinc-800);
    border-radius: 6px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: var(--color-zinc-300);
    font-weight: 500;
    font-size: 1.1rem;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 128px;
    border-radius: 8px;

    min-width: 128px;
  }

  span {
    color: var(--color-zinc-400);
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
    letter-spacing: -0.05rem;
  }

  footer {
    display: flex;
    gap: 4px;
    margin-top: 8px;
    font-size: 0.65rem;
    letter-spacing: 0.08rem;
  }

  footer a {
    color: var(--color-zinc-300);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--color-zinc-700);
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
    overflow: hidden;
  }

  footer a:hover {
    background-color: var(--color-zinc-800);
    border-color: var(--color-zinc-800);
    /* 22d3ee */
    color: var(--color-cyan-400);
  }

  @media screen and (max-width: 500px) {
    .wrapper {
      flex-direction: column-reverse;
    }
    .info {
      align-items: center;
      text-align: center;
    }
  }

  /*@container pfpimage (max-width: calc(500px - 64px)) {
    img {
      display: none;
    }

    .wrapper {
      flex-direction: column-reverse;
    }
  }*/
</style>
