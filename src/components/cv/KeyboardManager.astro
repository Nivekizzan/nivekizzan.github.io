---
import { basics } from '@cv/cv.json';
// import { basics as enBasics } from '@cv/cv-en.json';

import type { SocialIcon } from '@/types';

import IconCommand from '@icons/IconCommand.astro';

let currentLang = Astro.url.pathname.split('/')[1];
if (currentLang === 'cv') currentLang = 'ar';

const { profiles } = basics;

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" /></svg>`,
  LinkedIn: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" /><path d="M8 11l0 5" /><path d="M8 8l0 .01" /><path d="M12 16l0 -5" /><path d="M16 16v-3a2 2 0 0 0 -4 0" /></svg>`,
  X: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c0 -.249 1.51 -2.772 1.818 -4.013z" /></svg>`,
  YouTube: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M2 8a4 4 0 0 1 4 -4h12a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-12a4 4 0 0 1 -4 -4v-8z" /><path d="M10 9l5 3l-5 3z" /></svg>`,
  Instagram: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" /><path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" /><path d="M16.5 7.5l0 .01" /></svg>`,
  Twitch: `<svg width="24" height="24" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 5v11a1 1 0 0 0 1 1h2v4l4 -4h5.584c.266 0 .52 -.105 .707 -.293l2.415 -2.414c.187 -.188 .293 -.442 .293 -.708v-8.585a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1z" /><path d="M16 8l0 4" /><path d="M12 8l0 4" /></svg>`,
};
// P

// List FIRST LETTER:
// G, I, L, P, T, X, Y, Z

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network];
  const firstLetter = network[0].toUpperCase();

  if (currentLang === 'ar') {
    return {
      id: network,
      section: 'Social',
      title: `Visitar ${network}`,
      url,
      icon,
      hotkey: `ctrl+${firstLetter}`,
    };
  } else if (currentLang === 'en') {
    return {
      id: network,
      section: 'Social',
      title: `Visit ${network}`,
      url,
      icon,
      hotkey: `ctrl+${firstLetter}`,
    };
  }
});
---

<footer class="no-print">
  <span id="text"
    >{
      (currentLang === 'ar' && (
        <>
          Pulsa <kbd>Ctrl</kbd> + <kbd>K</kbd> para buscar comandos.
        </>
      )) ||
        (currentLang === 'en' && (
          <>
            Press <kbd>Ctrl</kbd> + <kbd>K</kbd> to search for commands.
          </>
        ))
    }
  </span>
  <IconCommand
    id="mobile-btn"
    style="position: fixed; bottom: 16px; right: 16px; padding: 8px; border: 2px solid var(--color-zinc-700); background-color: var(--color-zinc-900); border-radius: 9999px; z-index: 50;"
  />
</footer>

<ninja-keys
  data-info={JSON.stringify(profilesInfo)}
  placeholder="Buscar comandos"
  hideBreadcrumbs
  class="dark"
  noAutoLoadMdIcons></ninja-keys>

<style is:inline>
  @media screen and (min-width: 500px) {
    #mobile-btn {
      display: none;
    }
  }
</style>

<style>
  @media print {
    ninja-keys {
      display: none;
    }
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  #text {
    background: var(--color-zinc-900);
    border-top: 1px solid var(--color-zinc-700);
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }

  kbd {
    background-color: var(--color-zinc-700);
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }

  @-moz-document url-prefix() {
    #text {
      animation: none;
    }
  }

  @media screen and (max-width: 500px) {
    #text {
      display: none;
    }
  }
</style>

<script>
  import 'ninja-keys';

  interface Info {
    id: string;
    section: string;
    title: string;
    url: string;
    icon: string;
    hotkey: string;
  }

  const ninja = document.querySelector('ninja-keys');

  const btn = document.getElementById('mobile-btn');

  btn?.addEventListener('click', () =>
    document.dispatchEvent(
      new KeyboardEvent('keydown', {
        key: 'K',
        ctrlKey: true,
        keyCode: 75,
        which: 75,
        code: 'KeyK',
      })
    )
  );

  if (ninja !== null) {
    const info = ninja.getAttribute('data-info') ?? '';
    const parsedInfo = JSON.parse(info);

    const data = parsedInfo.map(
      ({ id, section, title, url, icon, hotkey }: Info) => {
        return {
          id,
          title,
          hotkey,
          icon,
          section,
          handler: () => window.open(url, '_blank'),
        };
      }
    ) as Info[];

    (ninja as any).data = [
      {
        id: 'print',
        title: 'Imprimir',
        hotkey: 'ctrl+P',
        icon: '<svg width="16" height="16" style="margin-right: 4px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2" /><path d="M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4" /><path d="M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" /></svg>',
        section: 'Acciones',
        handler: () => {
          window.print();
        },
      },
      {
        id: 'personal',
        title: 'Portfolio & Blog',
        hotkey: 'ctrl+Z',
        icon: '',
        section: 'Link',
        handler: () => window.open('https://kizen.dev', '_blank'),
      },
      ...data,
    ];
  }
</script>
